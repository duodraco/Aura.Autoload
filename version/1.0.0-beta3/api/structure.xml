<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a7" title="">
  <file path="Exception/AlreadyLoaded.php" hash="102dadac289c1247b41c614556d2f772" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="Exception">Aura\Autoload\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Autoload\Exception" line="21" package="Aura\Autoload">
      <extends>\Aura\Autoload\Exception</extends>
      <name>AlreadyLoaded</name>
      <full_name>\Aura\Autoload\Exception\AlreadyLoaded</full_name>
      <docblock line="14">
        <description><![CDATA[Indicates a class has already been loaded.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="14" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="Exception/NotDeclared.php" hash="440f2b090cb20d6bb4d1d46fe10f44eb" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="Exception">Aura\Autoload\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Autoload\Exception" line="21" package="Aura\Autoload">
      <extends>\Aura\Autoload\Exception</extends>
      <name>NotDeclared</name>
      <full_name>\Aura\Autoload\Exception\NotDeclared</full_name>
      <docblock line="14">
        <description><![CDATA[Indicates the loader did not find a class definition after loading a file.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="14" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="Exception/NotReadable.php" hash="acbf25fc27b506bde9a097514106f495" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <namespace-alias name="Exception">Aura\Autoload\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Aura\Autoload\Exception" line="21" package="Aura\Autoload">
      <extends>\Aura\Autoload\Exception</extends>
      <name>NotReadable</name>
      <full_name>\Aura\Autoload\Exception\NotReadable</full_name>
      <docblock line="14">
        <description><![CDATA[Indicates the Loader failed to find a class file.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="14" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="Exception.php" hash="6726d951f9e1636eed26467a695f3b9d" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <class final="false" abstract="false" namespace="Aura\Autoload" line="20" package="Aura\Autoload">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Aura\Autoload\Exception</full_name>
      <docblock line="13">
        <description><![CDATA[Generic package exception.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="Loader.php" hash="e7581f426156f9aa707147d92124dea7" package="Aura\Autoload">
    <docblock line="2">
      <description><![CDATA[This file is part of the Aura project for PHP.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="package" description="Aura.Autoload"/>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <include line="322" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Aura\Autoload" line="21" package="Aura\Autoload">
      <extends/>
      <name>Loader</name>
      <full_name>\Aura\Autoload\Loader</full_name>
      <docblock line="13">
        <description><![CDATA[An SPL autoloader adhering to [PSR-0](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md)
and <https://wiki.php.net/rfc/splclassloader>.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="13" name="package" description="Aura.Autoload"/>
      </docblock>
      <constant namespace="Aura\Autoload" line="30" package="Aura\Autoload">
        <name>MODE_SILENT</name>
        <full_name>MODE_SILENT</full_name>
        <value><![CDATA[0]]></value>
        <docblock line="23">
          <description><![CDATA[Operational mode where no exceptions are thrown under error conditions.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="const" description=""/>
        </docblock>
      </constant>
      <constant namespace="Aura\Autoload" line="40" package="Aura\Autoload">
        <name>MODE_NORMAL</name>
        <full_name>MODE_NORMAL</full_name>
        <value><![CDATA[1]]></value>
        <docblock line="32">
          <description><![CDATA[Operatinal mode where an exception is thrown when a class file is not
found.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="const" description=""/>
        </docblock>
      </constant>
      <constant namespace="Aura\Autoload" line="50" package="Aura\Autoload">
        <name>MODE_DEBUG</name>
        <full_name>MODE_DEBUG</full_name>
        <value><![CDATA[2]]></value>
        <docblock line="42">
          <description><![CDATA[Operatinal mode where an exception is thrown when a class file is not
found, or if after loading the file the class is still not declared.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="const" description=""/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="60" namespace="Aura\Autoload" package="Default">
        <name>$loaded</name>
        <default><![CDATA[array()]]></default>
        <docblock line="52">
          <description><![CDATA[Classes and interfaces loaded by the autoloader; the key is the class
name and the value is the file name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="Aura\Autoload" package="Default">
        <name>$paths</name>
        <default><![CDATA[array()]]></default>
        <docblock line="62">
          <description><![CDATA[A map of class name prefixes to directory paths.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="Aura\Autoload" package="Default">
        <name>$classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="71">
          <description><![CDATA[A map of exact class names to their file paths.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="87" namespace="Aura\Autoload" package="Default">
        <name>$mode</name>
        <default><![CDATA[self::MODE_NORMAL]]></default>
        <docblock line="80">
          <description><![CDATA[The operational mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="96" namespace="Aura\Autoload" package="Default">
        <name>$tried_paths</name>
        <default><![CDATA[array()]]></default>
        <docblock line="89">
          <description><![CDATA[A log of paths that have been tried during load(), for debug use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="105" package="Aura\Autoload">
        <name>setMode</name>
        <full_name>setMode</full_name>
        <docblock line="98">
          <description><![CDATA[Sets the autoloader operational mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="Autoloader operational mode." type="int" variable="$mode">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="117" package="Aura\Autoload">
        <name>isDebug</name>
        <full_name>isDebug</full_name>
        <docblock line="110">
          <description><![CDATA[Is the autoloader in debug mode?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="129" package="Aura\Autoload">
        <name>isSilent</name>
        <full_name>isSilent</full_name>
        <docblock line="122">
          <description><![CDATA[Is the autoloader in silent mode?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="143" package="Aura\Autoload">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="134">
          <description><![CDATA[Registers this autoloader with SPL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="param" description="True to prepend to the autoload stack." type="bool" variable="$prepend">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="134" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$prepend</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="155" package="Aura\Autoload">
        <name>unregister</name>
        <full_name>unregister</full_name>
        <docblock line="148">
          <description><![CDATA[Unregisters this autoloader from SPL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="175" package="Aura\Autoload">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="160">
          <description><![CDATA[Adds a directory path for a class name prefix.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="param" description="The class name prefix, e.g. 'Aura\Framework\\' or 'Zend_'." type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="param" description="The directory path leading to the classes with that prefix, e.g. `'/path/to/system/package/Aura.Framework-dev/src'`. Note that the classes must thereafter be in subdirectories of their own, e.g. `'/Aura/Framework/'." type="array|string" variable="$paths">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$prefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$paths</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="204" package="Aura\Autoload">
        <name>setPaths</name>
        <full_name>setPaths</full_name>
        <docblock line="182">
          <description><![CDATA[Sets all class name prefixes and their paths.]]></description>
          <long-description><![CDATA[<p>This overwrites the
existing mappings.</p>

<p>Paths can a string or an array. For example:</p>

<pre><code> $loader-&gt;setPaths([
     'Zend_'=&gt; '/path/to/zend/library',
     'Aura\\' =&gt; [
         '/path/to/project/Aura.Router/src/',
         '/path/to/project/Aura.Di/src/'
     ],
     'Vendor\\' =&gt; [
         '/path/to/project/Vendor.Package/src/',
     ],
     'Symfony\Component' =&gt; 'path/to/Symfony/Component',
 ]);
</code></pre>]]></long-description>
          <tag line="182" name="param" description="An associative array of class names and paths." type="array" variable="$paths">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$paths</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="218" package="Aura\Autoload">
        <name>getPaths</name>
        <full_name>getPaths</full_name>
        <docblock line="211">
          <description><![CDATA[Returns the list of all class name prefixes and their paths.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="234" package="Aura\Autoload">
        <name>setClass</name>
        <full_name>setClass</full_name>
        <docblock line="223">
          <description><![CDATA[Sets the exact file path for an exact class name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="223" name="param" description="The exact class name." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="param" description="The file path to that class." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="250" package="Aura\Autoload">
        <name>setClasses</name>
        <full_name>setClasses</full_name>
        <docblock line="239">
          <description><![CDATA[Sets all file paths for all class names; this overwrites all previous
exact mappings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="param" description="An array of class-to-file mappings where the key is the class name and the value is the file path." type="array" variable="$classes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="239" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$classes</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="262" package="Aura\Autoload">
        <name>getClasses</name>
        <full_name>getClasses</full_name>
        <docblock line="255">
          <description><![CDATA[Returns the list of exact class names and their paths.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="255" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="275" package="Aura\Autoload">
        <name>getLoaded</name>
        <full_name>getLoaded</full_name>
        <docblock line="267">
          <description><![CDATA[Returns the list of classes and interfaces loaded by the autoloader.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="267" name="return" description="An array of key-value pairs where the key is the class or interface name and the value is the file name." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="293" package="Aura\Autoload">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="280">
          <description><![CDATA[Loads a class or interface using the class name prefix and path,
falling back to the include-path if not found.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="280" name="param" description="The class or interface to load." type="string" variable="$spec">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="280" name="throws" description="when the file for the class or interface is not found." type="\Aura\Autoload\Exception\NotReadable">
            <type by_reference="false">\Aura\Autoload\Exception\NotReadable</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$spec</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Aura\Autoload" line="349" package="Aura\Autoload">
        <name>isDeclared</name>
        <full_name>isDeclared</full_name>
        <docblock line="340">
          <description><![CDATA[Tells if a class, interface or trait exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="340" name="param" description="The class or interface." type="string" variable="$spec">
            <type by_reference="false">string</type>
          </tag>
          <tag line="340" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="349">
          <name>$spec</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="366" package="Aura\Autoload">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="356">
          <description><![CDATA[Finds the path to a class or interface using the class prefix paths and
include-path.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="356" name="param" description="The class or interface to find." type="string" variable="$spec">
            <type by_reference="false">string</type>
          </tag>
          <tag line="356" name="return" description="absolute path to the class or interface." type="\Aura\Autoload\The">
            <type by_reference="false">\Aura\Autoload\The</type>
          </tag>
        </docblock>
        <argument line="366">
          <name>$spec</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Aura\Autoload" line="429" package="Aura\Autoload">
        <name>classToFile</name>
        <full_name>classToFile</full_name>
        <docblock line="420">
          <description><![CDATA[PSR-0 compliant class-to-file inflector.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="420" name="param" description="The name of the class or interface to load." type="string" variable="$spec">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="return" description="The filename version of the class or interface." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="429">
          <name>$spec</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Aura" full_name="Aura">
    <package name="Autoload" full_name="Aura\Autoload"/>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="Aura" full_name="Aura">
    <namespace name="Autoload" full_name="Aura\Autoload">
      <namespace name="Exception" full_name="Aura\Autoload\Exception"/>
    </namespace>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
